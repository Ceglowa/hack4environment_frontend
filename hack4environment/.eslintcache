[{"C:\\Users\\Szymon\\projects\\frontend\\hack4environment\\src\\index.js":"1","C:\\Users\\Szymon\\projects\\frontend\\hack4environment\\src\\reportWebVitals.js":"2","C:\\Users\\Szymon\\projects\\frontend\\hack4environment\\src\\App.js":"3","C:\\Users\\Szymon\\projects\\frontend\\hack4environment\\src\\points.js":"4","C:\\Users\\Szymon\\projects\\frontend\\hack4environment\\src\\hulls.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":3854,"mtime":1610202415296,"results":"9","hashOfConfig":"7"},{"size":8393292,"mtime":1610191818338,"results":"10","hashOfConfig":"7"},{"size":17273,"mtime":1610201998970,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1nh4hpj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":1,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\Szymon\\projects\\frontend\\hack4environment\\src\\index.js",[],["24","25"],"C:\\Users\\Szymon\\projects\\frontend\\hack4environment\\src\\reportWebVitals.js",[],"C:\\Users\\Szymon\\projects\\frontend\\hack4environment\\src\\App.js",["26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polygon, GeoJSON, FeatureGroup, CircleMarker } from 'react-leaflet'\r\nimport { useCallback, useState } from 'react';\r\nimport points from './points';\r\nimport L from 'leaflet'\r\nimport hulls from './hulls'\r\nimport Sidebar from \"react-sidebar\";\r\nimport { SlidingPanel } from 'react-sliding-side-panel';\r\nimport Table from 'rc-table';\r\n\r\nconst center = [50.72698333, -1.74063611]\r\nconst purpleOptions = { color: 'purple' }\r\n\r\n\r\nfunction Hull({setOpenPanel}) {\r\n  const onEachFeature = (feature, layer) => {\r\n    layer.on({\r\n      click: () => clickToFeature(feature, layer)\r\n    });\r\n  }\r\n\r\n  const clickToFeature = (feature, layer) => {\r\n     setOpenPanel(true);\r\n    //  setClusterID(feature.properties.cluster); \r\n    //  setData(feature.properties.trash_data);\r\n    //  setTrashCount(feature.properties.trash_count);\r\n     console.log(\"I clicked on \" , feature.properties.cluster);\r\n  }\r\n \r\n  const styl = (geoJsonFeature) => {\r\n    let color = geoJsonFeature.properties.color\r\n    if (!color){\r\n      color = \"blue\"\r\n    }\r\n    console.log(color)\r\n    return {\r\n      color: color\r\n    }\r\n  }\r\n  \r\n  return <FeatureGroup>\r\n    <GeoJSON    \r\n      data={hulls}\r\n      onEachFeature={onEachFeature}\r\n      style = {styl}\r\n    />\r\n    <Popup>Popup in FeatureGroup</Popup>\r\n  </FeatureGroup>\r\n}\r\nfunction App() {\r\n  const markerOptions = {\r\n    radius: 0.5\r\n  }\r\n  \r\n  const imageHover = (ev) => {\r\n    console.log(ev.target.feature.properties.photo_id)\r\n  }\r\n\r\n  const pointToLayer = (geoJsonPoint, latlng) => {\r\n    const marker = L.circleMarker(latlng, markerOptions)\r\n    const extArr = geoJsonPoint.properties.filename.split(\".\")\r\n    const ext = extArr[extArr.length - 1]\r\n    const url = \"http://localhost:8080/\" + geoJsonPoint.properties.photo_id + \".\" + ext;\r\n    \r\n    // const popupContent = document.createElement(\"img\");\r\n    const popupContent = \"<div><img class='popup-image' src=\"+ url + \"/></div>\"\r\n    // popupContent.src = url;\r\n    marker.bindPopup(popupContent, {\r\n      minWidth: \"300px\"\r\n    })\r\n    marker.on('mouseover', () => {\r\n      console.log(popupContent);\r\n      marker.openPopup();\r\n    })\r\n    marker.on('mouseout', () => marker.closePopup())\r\n    return marker\r\n  }\r\n\r\n  const onSetSidebarOpen = (open) => {\r\n    this.setState({ sidebarOpen: open });\r\n  }\r\n\r\n  const [visible, setVisible] = useState(false);\r\n  \r\n  const [openPanel, setOpenPanel] = useState(false);\r\n  const [clusterID, setClusterID] = useState(0);\r\n  const [clusterData, setData] = useState([]);\r\n  const [trashCount, setTrashCount] = useState(0);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <MapContainer center={center} zoom={20} scrollWheelZoom={false} style={{height : '100vh'}}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker position={[51.505, -0.09]}>\r\n          <Popup>\r\n            A pretty CSS3 popup. <br /> Easily customizable.\r\n          </Popup>\r\n        </Marker>\r\n        <Hull setOpenPanel={setOpenPanel}></Hull>\r\n        <FeatureGroup>\r\n          <GeoJSON\r\n            data={points} pointToLayer={pointToLayer}>\r\n            </GeoJSON>\r\n        </FeatureGroup>\r\n      </MapContainer>\r\n\r\n      <SlidingPanel\r\n        type={'right'}\r\n        isOpen={openPanel}\r\n        size={30}\r\n      >\r\n        <div className=\"panel-container\">\r\n          <p> CLuster iddd</p>\r\n          <Table\r\n            columns={columns}\r\n            data={clusterData}\r\n            tableLayout=\"auto\"\r\n          />\r\n          <p></p>\r\n          <button onClick={() => setOpenPanel(false)}>close</button>\r\n\r\n        </div>\r\n      </SlidingPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Szymon\\projects\\frontend\\hack4environment\\src\\points.js",[],"C:\\Users\\Szymon\\projects\\frontend\\hack4environment\\src\\hulls.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},{"ruleId":"46","severity":1,"message":"50","line":3,"column":50,"nodeType":"48","messageId":"49","endLine":3,"endColumn":57},{"ruleId":"46","severity":1,"message":"51","line":3,"column":82,"nodeType":"48","messageId":"49","endLine":3,"endColumn":94},{"ruleId":"46","severity":1,"message":"52","line":4,"column":10,"nodeType":"48","messageId":"49","endLine":4,"endColumn":21},{"ruleId":"46","severity":1,"message":"53","line":8,"column":8,"nodeType":"48","messageId":"49","endLine":8,"endColumn":15},{"ruleId":"46","severity":1,"message":"54","line":13,"column":7,"nodeType":"48","messageId":"49","endLine":13,"endColumn":20},{"ruleId":"46","severity":1,"message":"55","line":56,"column":9,"nodeType":"48","messageId":"49","endLine":56,"endColumn":19},{"ruleId":"46","severity":1,"message":"56","line":80,"column":9,"nodeType":"48","messageId":"49","endLine":80,"endColumn":25},{"ruleId":"46","severity":1,"message":"57","line":84,"column":10,"nodeType":"48","messageId":"49","endLine":84,"endColumn":17},{"ruleId":"46","severity":1,"message":"58","line":84,"column":19,"nodeType":"48","messageId":"49","endLine":84,"endColumn":29},{"ruleId":"46","severity":1,"message":"59","line":87,"column":10,"nodeType":"48","messageId":"49","endLine":87,"endColumn":19},{"ruleId":"46","severity":1,"message":"60","line":87,"column":21,"nodeType":"48","messageId":"49","endLine":87,"endColumn":33},{"ruleId":"46","severity":1,"message":"61","line":88,"column":23,"nodeType":"48","messageId":"49","endLine":88,"endColumn":30},{"ruleId":"46","severity":1,"message":"62","line":89,"column":10,"nodeType":"48","messageId":"49","endLine":89,"endColumn":20},{"ruleId":"46","severity":1,"message":"63","line":89,"column":22,"nodeType":"48","messageId":"49","endLine":89,"endColumn":35},{"ruleId":"64","severity":2,"message":"65","line":119,"column":22,"nodeType":"48","messageId":"66","endLine":119,"endColumn":29},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Polygon' is defined but never used.","'CircleMarker' is defined but never used.","'useCallback' is defined but never used.","'Sidebar' is defined but never used.","'purpleOptions' is assigned a value but never used.","'imageHover' is assigned a value but never used.","'onSetSidebarOpen' is assigned a value but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'clusterID' is assigned a value but never used.","'setClusterID' is assigned a value but never used.","'setData' is assigned a value but never used.","'trashCount' is assigned a value but never used.","'setTrashCount' is assigned a value but never used.","no-undef","'columns' is not defined.","undef","no-global-assign","no-unsafe-negation"]